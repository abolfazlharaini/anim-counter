[{"/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/index.jsx":"1","/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/App.jsx":"2","/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/AnimCounter.jsx":"3","/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/AnimCounterLogic.js":"4","/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/MinusIcon.jsx":"5","/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/PlusIcon.jsx":"6","/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/AnimCounter.styles.jsx":"7"},{"size":197,"mtime":1633635977590,"results":"8","hashOfConfig":"9"},{"size":461,"mtime":1633982663968,"results":"10","hashOfConfig":"9"},{"size":1371,"mtime":1633982229085,"results":"11","hashOfConfig":"9"},{"size":2450,"mtime":1633635722070,"results":"12","hashOfConfig":"9"},{"size":327,"mtime":1633982373086,"results":"13","hashOfConfig":"9"},{"size":403,"mtime":1633982373086,"results":"14","hashOfConfig":"9"},{"size":510,"mtime":1633635963260,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1deq2i9",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32"},"/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/index.jsx",[],["33","34"],"/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/App.jsx",[],"/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/AnimCounter.jsx",["35"],"/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/AnimCounterLogic.js",["36","37"],"﻿import { useEffect, useState } from \"react\";\nimport { nanoid } from 'nanoid';\n\n\nlet timeout = 0;\n\nconst AnimCounterLogic = (props) => {\n    const [currentValue, setCurrentValue] = useState(props.defaultValue ?? 0);\n    const [incrementQueue, setIncrementQueue] = useState([\n        { value: currentValue, top: '0', id: nanoid() }\n    ]);\n\n    useEffect(() => initAnimQueue(), [incrementQueue]);\n\n    const onAddToNextQueue = (isIncrease) => {\n\n        if (props.disabled)\n            return;\n\n        const newValue = isIncrease ? currentValue + 1 : currentValue - 1;\n\n        setCurrentValue(newValue);\n        setIncrementQueue((state) => {\n\n            const newIncrementQueue = [...state];\n            newIncrementQueue.push({\n                id: nanoid(),\n                value: newValue,\n\n                top: isIncrease ? '100%' : '-100%',\n\n                isIncrease\n            });\n            return [...newIncrementQueue];\n        });\n\n        if (props.onChange)\n            props.onChange(newValue);\n    }\n\n    const initAnimQueue = () => {\n\n        console.log('initAnimQueue')\n        if (incrementQueue.length <= 1 || timeout)\n            return;\n\n        if (incrementQueue.length === 2 && incrementQueue[1].top !== '0') {\n            setIncrementQueue((state) => {\n                const newIncrementQueue = [...state];\n                if (newIncrementQueue[1] !== undefined) {\n                    newIncrementQueue[0].top = newIncrementQueue[1].isIncrease ? '-100%' : '100%';\n                    newIncrementQueue[1].top = '0';\n                }\n                return [...newIncrementQueue]\n            });\n            return;\n        }\n\n        timeout = window.setTimeout(() => {\n            timeout = undefined;\n\n            setIncrementQueue((state) => {\n                if (state.length === 2)\n                    return state;\n\n                const newIncrementQueue = [...state.filter((_, i) => i !== 0)];\n                if (newIncrementQueue[1] !== undefined) {\n                    newIncrementQueue[0].top = newIncrementQueue[1].isIncrease ? '-100%' : '100%';\n                    newIncrementQueue[1].top = '0';\n                }\n                return [...newIncrementQueue]\n            });\n        }, [props.duration]);\n    }\n\n    return {\n        onClickPlusBtn: () => onAddToNextQueue(true),\n        onClickMinusBtn: () => onAddToNextQueue(false),\n        incrementQueue\n    };\n}\nexport default AnimCounterLogic;\n","/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/MinusIcon.jsx",["38"],"/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/PlusIcon.jsx",["39"],"/home/a-haraini/Desktop/Projects/TfsProjects/Personal/anim-counter/src/AnimCounter.styles.jsx",["40"],"﻿import styled from 'styled-components';\n\nexport const Label = styled.label`\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    right: 0;\n    transition: all ${props => props.duration / 1000}s;\n    width: 100%;\n`;\n\nexport const Button = styled.button``;\n\nexport const LabelWrapper = styled.div`\n    height: 20px;\n    position: relative;\n    overflow: hidden;\n    width: 20px;\n`;\n\nexport const Root = styled.div`\n    display: flex;\n    align-items: center;\n`;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":1,"nodeType":"47","messageId":"48","fix":"49"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":1,"nodeType":"47","messageId":"48","fix":"50"},{"ruleId":"51","severity":1,"message":"52","line":13,"column":38,"nodeType":"53","endLine":13,"endColumn":54,"suggestions":"54"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":1,"nodeType":"47","messageId":"48","fix":"55"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":1,"nodeType":"47","messageId":"48","fix":"56"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":1,"nodeType":"47","messageId":"48","fix":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"60","text":"61"},{"range":"62","text":"61"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initAnimQueue'. Either include it or remove the dependency array.","ArrayExpression",["63"],{"range":"64","text":"61"},{"range":"65","text":"61"},{"range":"66","text":"61"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],{"desc":"67","fix":"68"},[-1,0],[-1,0],[-1,0],"Update the dependencies array to be: [incrementQueue, initAnimQueue]",{"range":"69","text":"70"},[376,392],"[incrementQueue, initAnimQueue]"]